{
  "variables" : {
        "comment_packer"        : "use v1.2.x only",
        "instance.region"       : null,
        "instance.iam_profile"  : "",
        "instance.type"         : "t2.medium",
        "instance.ssh.keypair"      : "",
        "instance.ssh.password"     : "",
        "instance.ssh.private_key"  : "",
        "instance.ssh.agent_auth"   : "false",

        "net.container"         : "",
        "net.subnet"            : "",
        "net.assign_public_ip"  : "false",
        "net.security_groups"   : "",
        "net.ssh_interface"     : "",

        "image.id"              : null,
        "image.name"            : null,
        "image.virt"            : "hvm",
        "image.login"           : null,
        "image.copies"          : "",
        "image.users"           : "",
        "image.groups"          : "",
        "image.delete_existing" : "false",
        "image.delete_snapshot" : "true",
        "image.latest"          : "true",

        "disk0.device"          : "/dev/xvda",
        "disk0.size"            : "12",
        "disk0.type"            : "gp2",
        "disk0.encrypt"         : "false",
        "disk0.delete"          : "true",

        "disk1.device"          : "/dev/xvdf",
        "disk1.size"            : "13",
        "disk1.type"            : "gp2",
        "disk1.encrypt"         : "false",
        "disk1.delete"          : "false",
        "disk1.disable"         : "false",

        "os.vendor"             : null,
        "os.release"            : null,
        "os.arch"               : null,
        "os.tmpdir"             : null,
        "os.pkg.cmd"            : null,
        "os.pkg.suffix"         : null,
        "os.repo"               : "",
        "os.repo.cmd"           : "",
        "os.repo.version"       : "",

        "project"               : null,
        "layer"                 : "base",
        "role"                  : "none",

        "factory.basedir"       : null,
        "ansible.basedir"       : null,
        "ansible.timeout"       : "90",
        "reboot.timeout"        : "25m",
        "connect.timeout"       : "10m",

        "build.branch"          : "{{env `BUILD_BRANCH`}}",
        "build.commit"          : "{{env `BUILD_COMMIT`}}",
        "build.number"          : "{{env `BUILD_NUMBER`}}",

        "comment_debug"         : "FIXME expose .Debug from Packer internals",
        "provision.debug"       : "0",
        "provision.verbose"     : "0",
        "provision.shebang"     : "/bin/bash -e",
        "comment_tmpdir"        : "FIXME expose .TmpDir from packer.ConfigTmpDir()",
        "provision.tmpdir"      : "/var/tmp",
        "provision.uuid"        : "{{env `PACKER_RUN_UUID`}}"
    },

  "builders" : [
    {
        "type"                  : "amazon-ebs",
        "communicator"          : "ssh",

        "ssh_username"          : "{{user `image.login`}}",
        "ssh_interface"         : "{{user `ssh.interface`}}",
        "ssh_keypair_name"      : "{{user `instance.ssh.keypair`}}",
        "ssh_password"          : "{{user `instance.ssh.password`}}",
        "ssh_private_key_file"  : "{{user `instance.ssh.private_key`}}",
        "ssh_agent_auth"        : "{{user `instance.ssh.agent_auth`}}",
        "ssh_timeout"           : "{{user `connect.timeout`}}",

        "user_data_file"        : "",

        "region"                : "{{user `instance.region`}}",
        "instance_type"         : "{{user `instance.type`}}",
        "iam_instance_profile"  : "{{user `instance.iam_profile`}}",
        "encrypt_boot"          : "{{user `disk0.encrypt`}}",
        "vpc_id"                : "{{user `net.container`}}",
        "subnet_id"             : "{{user `net.subnet`}}",
        "security_group_ids"    : "{{user `net.security_groups`}}",
        "associate_public_ip_address" : "{{user `net.assign_public_ip`}}",
        "force_deregister"      : "{{user `image.delete_existing`}}",
        "force_delete_snapshot" : "{{user `image.delete_snapshot`}}",

        "run_tags" : {
            "Name"              : "{{build_name}}: {{user `project`}} [{{user `layer`}}-{{user `role`}}]",
            "TSCreatorName"             : "example@enquizit.com",
            "creator-email"             : "example@enquizit.com",
            "uuid"              : "{{user `provision.uuid`}}"
        },
        "run_volume_tags" : {
            "TSCreatorName"             : "example@enquizit.com",
            "creator-email"             : "example@enquizit.com",
            "uuid"              : "{{user `provision.uuid`}}"
        },
        "tags" : {
            "project"           : "{{user `project`}}",
            "layer"             : "{{user `layer`}}",
            "role"              : "{{user `role`}}",
            "commit"            : "{{user `build.commit`}}",
            "branch"            : "{{user `build.branch`}}",
            "version"           : "{{user `build.number`}}",
            "os.vendor"         : "{{user `os.vendor`}}",
            "os.release"        : "{{user `os.release`}}",
            "os.arch"           : "{{user `os.arch`}}",
            "share"             : ""
        },

        "source_ami"            : "{{user `image.id`}}",
        "source_ami_filter" : {
            "filters" : {
                "name"                  : "{{user `image.name`}}",
                "root-device-type"      : "ebs",
                "virtualization-type"   : "{{ user `image.virt`}}"
            },
            "owners"            : "{{user `image.owner`}}",
            "most_recent"       : "{{user `image.latest`}}"
        },

        "ami_name"              : "{{user `project`}} [{{user `layer`}}-{{user `role`}}] {{user `os.vendor`}} {{user `os.kernel`}}-{{user `os.release`}} ({{user `build.number`}})",
        "ami_description"       : "{{user `image.description`}}",
        "ami_regions"           : "{{user `image.copies`}}",
        "ami_users"             : "{{user `image.users`}}",
        "ami_groups"            : "{{user `image.groups`}}",

        "launch_block_device_mappings" : [
          {
            "no_device"         : false,
            "device_name"       : "{{user `disk0.device`}}",
            "volume_size"       : "{{user `disk0.size`}}",
            "volume_type"       : "{{user `disk0.type`}}",
            "encrypted"         : "{{user `disk0.encrypt`}}",
            "delete_on_termination" : "{{user `disk0.delete`}}"
          },
          {
            "no_device"         : "{{user `disk1.disable`}}",
            "device_name"       : "{{user `disk1.device`}}",
            "volume_size"       : "{{user `disk1.size`}}",
            "volume_type"       : "{{user `disk1.type`}}",
            "encrypted"         : "{{user `disk1.encrypt`}}",
            "delete_on_termination" : "{{user `disk1.delete`}}"
          }
        ]
    }
  ],

  "provisioners" : [
    {
        "type"                  : "file",
        "source"                : "{{user `factory.basedir`}}/scripts",
        "destination"           : "{{user `os.tmpdir`}}"
    },
    {
        "type"                  : "shell",
        "environment_vars" : [
            "DEBUG={{user `provision.debug`}}",
            "VERBOSE={{user `provision.verbose`}}"
        ],
        "inline" : [
            "cd {{user `os.tmpdir`}}",

            "chmod -R a+x scripts/*.sh",
            "scripts/package-minimal.sh",
            "VG=persist scripts/cis/cis-01_01_02-16.sh {{user `disk1.device`}}",
            "# hack for later provisioners",
            "sudo mount -o remount,exec /tmp",

            "scripts/package-awstools.sh",
            "#FIXME use $OS_REPO_CMD. sudo yum -y update"
        ]
    },
    {
        "type"                  : "shell",
        "start_retry_timeout"   : "{{user `reboot.timeout`}}",
        "expect_disconnect"     : true,
        "environment_vars" : [
            "DEBUG={{user `provision.debug`}}",
            "VERBOSE={{user `provision.verbose`}}"
        ],
        "inline" : [
            "# hard-coded for DoT instead of using JSON inputs to installer",
            "cd {{user `os.tmpdir`}}",
            "WGET='wget -4 -nc -nv --timeout=90'",

            "# SNMP v3",
            "sudo yum install -y net-snmp net-snmp-utils net-snmp-devel",
            "#sudo net-snmp-config --create-snmpv3-user -ro -A fdvxYIYJlGG2WS5NbspV -X fdvxYIYJlGG2WS5NbspV -a SHA -x AES DOTsnmpv3agent",
            "#( cd /etc/snmp; sudo $WGET https://s3.amazonaws.com/dot-newserverinstall/etc/snmp.conf )",

            "# Big-Fix, https://support.bigfix.com/bes/release/",
            "#sudo rpm -ivh http://software.bigfix.com/download/bes/95/BESAgent-9.5.8.38-rhe6.x86_64.rpm",
            "#( CONF_DIR=/etc/opt/BESClient; sudo mkdir -p $CONF_DIR; sudo $WGET -O $CONF_DIR/actionsite.afxm https://s3.amazonaws.com/dot-newserverinstall/BES+Client/Windows/masthead.afxm )",

            "# TrendMicro - installer is BRITTLE!!",
            "#sudo yum install -y https://s3.amazonaws.com/dot-newserverinstall/TrendMicro/Redhat/Agent-Core-RedHat_EL6-11.0.0-439.x86_64.rpm || sudo yum install -y https://s3.amazonaws.com/dot-newserverinstall/TrendMicro/Redhat/Agent-Core-RedHat_EL7-11.0.0-439.x86_64.rpm"
        ]
    },
    {
        "type"                  : "ansible",
        "ansible_env_vars" : [
            "ANSIBLE_LOCAL_TEMP={{user `provision.tmpdir`}}",
            "ANSIBLE_NO_LOG=false",
            "ANSIBLE_VERBOSITY={{user `provision.verbose`}}",
            "ANSIBLE_STDOUT_CALLBACK=stderr",
            "ANSIBLE_SSH_RETRIES=3",
            "ANSIBLE_TIMEOUT={{user `ansible.timeout`}}",
            "FACTORY_BASEDIR={{user `factory.basedir`}}"
        ],
        "playbook_file"         : "{{user `ansible.basedir`}}/OSCAP/site.yaml",
        "extra_arguments" : [
            "--skip-tags", "grub,bootloader,rescue,sudoers"
        ]
    }
  ],

  "post-processors" : [
    {
        "type"                  : "manifest"
    }
  ]
}

